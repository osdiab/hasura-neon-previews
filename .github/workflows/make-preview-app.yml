name: Make Preview App
on:
  pull_request:
    types: [open, reopen, synchronize]
    branches:
      - main

jobs:
  preview-neon:
    name: "Make Neon Preview Postgres Branch"
    runs-on: ubuntu-latest
    steps:
      - name: List Neon Branches
        id: list-branches
        env:
          NEON_PROJECT_ID: ${{secrets.NEON_PROJECT_ID}}
          NEON_API_KEY: ${{secrets.NEON_API_KEY}}
        run: |
          curl "https://console.neon.tech/api/v2/projects/$NEON_PROJECT_ID/branches" \
            --header 'accept: application/json' \
            --header "Authorization: Bearer $NEON_API_KEY" | jq '.branches[] | select(.name=="main").project_id'

      # - name: Create Neon Branch
      #   id: create-branch
      #   env:
      #     NEON_PROJECT_ID: ${{secrets.NEON_PROJECT_ID}}
      #     NEON_API_KEY: ${{secrets.NEON_API_KEY}}
      #   run: |
      #     curl 'https://console.neon.tech/api/v2/projects/$NEON_PROJECT_ID/branches' \
      #       --header 'Accept: application/json' \
      #       --header 'Authorization: Bearer $NEON_API_KEY' \
      #       --header 'Content-Type: application/json' \
      #       --data '{
      #       "endpoints": [
      #         {
      #           "type": "read_write"
      #         }
      #       ],
      #       "branch": {
      #         "parent_id": "$NEON_PROJECT_ID"
      #       }
      #     }'
      # - name: Print result
      #   env:
      #     RAW_OUTPUT: ${{steps.run_tests.outputs.create-branch}}
      #   run: echo "$RAW_OUTPUT"
      # - name: Print parsed
      #   env:
      #     BRANCH_DETAILS: ${{fromJson(steps.run_tests.outputs.create-branch).branch}}
      #   run: echo "$BRANCH_DETAILS"
  # preview-hasura:
  #   name: "Make Hasura Preview"
  #   runs-on: ubuntu-latest
  #   needs: [preview-neon]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: hasura/hasura-cloud-preview-apps@v0.1.7
  #       with:
  #         name: "hasura-neon-previews-pr-${{github.event.number}}" # name of the preview app to created
  #         hasuraProjectDirectoryPath: apps/hasura # path to the Hasura project directory in the repo
  #         hasuraEnv: | # env vars exposed to the Hasura instance
  #          	HASURA_GRAPHQL_CORS_DOMAINS=http://my-site.com
  #          	PG_DATABASE_URL=${{secrets.PG_STRING}}
  #         postgresDBConfig: |
  #           POSTGRES_SERVER_CONNECTION_URI=${{secrets.PG_STRING}}
  #           PG_ENV_VARS_FOR_HASURA=PG_DB_URL_1,PG_DB_URL_2
  #       env:
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} # ${{ secrets.GITHUB_TOKEN }} is provided by default by GitHub actions
  #         HASURA_CLOUD_ACCESS_TOKEN: ${{secrets.HASURA_CLOUD_ACCESS_TOKEN}} # Hasura Cloud access token to contact Hasura Cloud APIs